:root {
  color-scheme: dark;
  --cube-size: 5rem;
  --camera-distance: 50rem;
  --air-image: none;
  pointer-events: none;
}

label,
button {
  cursor: pointer;
}

h1,
p {
  margin: 0;
}

h1,
strong {
  font-weight: 600;
}

a {
  color: inherit;
}

@keyframes look-up {
  0% {
    rotate: x 0turn;
  }

  100% {
    rotate: x calc(var(--max-rotation));
  }
}

@keyframes look-down {
  from {
    rotate: x 0turn;
  }

  to {
    rotate: x calc(-1 * var(--max-rotation));
  }
}

@keyframes move-down {
  from {
    translate: 0 0;
  }

  to {
    translate: 0 calc(var(--max-translation));
  }
}

@keyframes move-up {
  from {
    translate: 0 0;
  }

  to {
    translate: 0 calc(-1 * var(--max-translation));
  }
}

@keyframes move-forwards {
  from {
    translate: 0 0 0;
  }

  to {
    translate: 0 0 calc(-1 * var(--max-translation));
  }
}

@keyframes move-backwards {
  from {
    translate: 0 0 0;
  }

  to {
    translate: 0 0 calc(var(--max-translation));
  }
}

@keyframes rotate-clockwise {
  from {
    rotate: y 0turn;
  }

  to {
    rotate: y calc(-1 * var(--max-rotation));
  }
}

@keyframes rotate-counterclockwise {
  from {
    rotate: y 0turn;
  }

  to {
    rotate: y calc(var(--max-rotation));
  }
}

.controls:has(> .block-chooser > .air > input[type='radio']:checked)
  ~ main
  .cubes-container
  > .cube:not(.air) {
  display: none;
}

.controls:has(> .block-chooser > .stone > input[type='radio']:checked)
  ~ main
  .cubes-container
  > .cube:not(.stone) {
  display: none;
}

.controls:has(> .block-chooser > .grass > input[type='radio']:checked)
  ~ main
  .cubes-container
  > .cube:not(.grass) {
  display: none;
}

.controls:has(> .block-chooser > .dirt > input[type='radio']:checked)
  ~ main
  .cubes-container
  > .cube:not(.dirt) {
  display: none;
}

.controls:has(> .block-chooser > .log > input[type='radio']:checked)
  ~ main
  .cubes-container
  > .cube:not(.log) {
  display: none;
}

.controls:has(> .block-chooser > .wood > input[type='radio']:checked)
  ~ main
  .cubes-container
  > .cube:not(.wood) {
  display: none;
}

.controls:has(> .block-chooser > .leaves > input[type='radio']:checked)
  ~ main
  .cubes-container
  > .cube:not(.leaves) {
  display: none;
}

.controls:has(> .block-chooser > .glass > input[type='radio']:checked)
  ~ main
  .cubes-container
  > .cube:not(.glass) {
  display: none;
}

.controls:has(.up:active) ~ main .down {
  animation-play-state: running;
}

.controls:has(.down:active) ~ main .up {
  animation-play-state: running;
}

.controls:has(.clockwise:active) ~ main .clockwise {
  animation-play-state: running;
}

.controls:has(.counterclockwise:active) ~ main .counterclockwise {
  animation-play-state: running;
}

.controls:has(.forwards:active) ~ main .backwards {
  animation-play-state: running;
}

.controls:has(.backwards:active) ~ main .forwards {
  animation-play-state: running;
}

.controls:has(.look-up:active) ~ main .look-up {
  animation-play-state: running;
}

.controls:has(.look-down:active) ~ main .look-down {
  animation-play-state: running;
}

.cubes-container > .cube > label:hover,
.controls:has(.air > input[type='radio']:checked)
  ~ main
  .cubes-container:hover
  > .cube
  > label {
  --outline-width: calc(var(--cube-size) / 24);
  outline: var(--outline-width) solid white;
  outline-offset: calc(-1 * var(--outline-width));
}

.controls:has(.air > input[type='radio']:checked)
  ~ main
  .cubes-container:hover
  > .cube
  > label {
  filter: brightness(70%);
}
